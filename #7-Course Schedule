Link :  https://leetcode.com/problems/course-schedule/

// Detect Cycle using Topo Sort

class Solution {
public:

    bool isCycle(int node,vector<int> &vis,vector<int> &dfsvis,vector<int>adj[]){
        vis[node]=1;
        dfsvis[node]=1;
        for(auto it:adj[node]){
            if(!vis[it]){
                if(isCycle(it,vis,dfsvis,adj)){
                    return true;
                }                
            }
            else if(vis[it]&&dfsvis[it]){
                return true;
            }
        }
        dfsvis[node]=0;
        return false;
    }

    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int n=numCourses;
        vector<int> adj[n];
        vector<int> vis(n,0),dfsvis(n,0);
        for(auto it:prerequisites){            
            int a=it[0];
            int b=it[1];
            adj[a].push_back(b);
        }
        for(int i=0;i<n;i++){
            if(!vis[i]){
                if(isCycle(i,vis,dfsvis,adj)){
                    return false;
                }
            }
        }
        return true;
    }
};
