Link :  https://leetcode.com/problems/new-21-game/submissions/882036002/


class Solution {
public:
    double new21Game(int n, int k, int maxPts) {
        if(k==0){
            return 1.0;
        }
        int maxScore=k-1+maxPts;
        vector<double> dp(maxScore+1,0);
        dp[0]=1;
        for(int i=1;i<=maxScore;i++){
            for(int j=1;j<=maxPts;j++){
                if((i-j>=0)&&(i-j)<k){
                    dp[i]+=dp[i-j]/double(maxPts);
                }
            }
        }
        double ans=0;
        for(int i=k;i<=n;i++){
            ans+=dp[i];
        }
        return ans;
    }
};


class Solution {
public:
    double new21Game(int n, int k, int maxPts) {
        if(k==0||n>=k+maxPts){
            return 1.0;
        }
        vector<double> dp(n+1,0);
        dp[0]=1;
        double runningSum=dp[0];
        double result=0;
        for(int i=1;i<=n;i++){
            dp[i]=runningSum/double(maxPts);
            if(i<k){
                runningSum+=dp[i];
            }
            else{
                result+=dp[i];
            }
            if(i-maxPts>=0){
                runningSum-=dp[i-maxPts];
            }
        }        
        return result;
    }
};
