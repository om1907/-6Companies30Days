Link :  https://leetcode.com/problems/max-area-of-island/submissions/881912829/



class Solution {
public:
    vector<int> x{-1,0,1,0};
    vector<int> y{0,1,0,-1};    
    void dfs(vector<vector<int>>&grid,int i,int j,int &ans,vector<vector<int>>&vis){
        int m=grid.size();
        int n=grid[0].size();
        vis[i][j]=1;
        ans++;
        for(int k=0;k<4;k++){
            int nx=i+x[k];
            int ny=j+y[k];
            if((nx>=0)&&(nx<m)&&(ny>=0)&&(ny<n)&&(grid[nx][ny]&&!vis[nx][ny])){
                dfs(grid,nx,ny,ans,vis);
            }
        }
    }
    int ans=0;
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int maxArea=0;
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>> vis(m,vector<int>(n,0));        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1&&!vis[i][j]){                     
                    dfs(grid,i,j,ans,vis);
                    vis[i][j]=1;
                    cout<<ans<<" ";
                    maxArea=max(maxArea,ans); 
                    ans=0;                  
                }
            }
        }
        return maxArea;
    }
};
